# Generated by Django 5.0.2 on 2025-07-03 22:28

from django.db import migrations, models
import django.db.models.deletion


def migrate_tags_to_pages(apps, schema_editor):
    """
    Migrate existing tags to pages and create many-to-many relationships
    """
    # This migration originally migrated from the old tagging system
    # Since we've removed the tagging app, this is now a no-op
    pass


def reverse_migrate_tags_to_pages(apps, schema_editor):
    """
    Reverse migration - recreate tags from tag pages
    """
    # This would be complex to reverse perfectly, so we'll just clean up
    Page = apps.get_model('knowledge', 'Page')
    
    # Remove all pages that were created as tag pages
    Page.objects.filter(page_type='tag').delete()


class Migration(migrations.Migration):

    dependencies = [
        ("knowledge", "0006_page_content_page_is_published"),
    ]

    operations = [
        # Add 'tag' as a new page type choice
        migrations.AlterField(
            model_name='page',
            name='page_type',
            field=models.CharField(
                choices=[
                    ('page', 'Regular Page'),
                    ('daily', 'Daily Note'),
                    ('template', 'Template'),
                    ('tag', 'Tag Page'),
                ],
                default='page',
                max_length=20,
            ),
        ),
        
        # Add many-to-many relationship between Block and Page
        migrations.AddField(
            model_name='block',
            name='pages',
            field=models.ManyToManyField(
                related_name='tagged_blocks',
                to='knowledge.Page',
                blank=True,
                help_text='Pages this block belongs to (used for tagging)'
            ),
        ),
        
        # Run the data migration
        migrations.RunPython(
            migrate_tags_to_pages,
            reverse_migrate_tags_to_pages,
        ),
    ]
