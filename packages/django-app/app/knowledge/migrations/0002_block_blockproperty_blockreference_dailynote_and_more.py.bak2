# Generated by Django 5.0.2 on 2025-06-17 23:26

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('knowledge', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('content', models.TextField(help_text='Block content in markdown')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order within parent/page')),
                ('block_type', models.CharField(choices=[('text', 'Text'), ('todo', 'Todo'), ('done', 'Done'), ('heading', 'Heading')], default='text', max_length=20)),
            ],
            options={
                'db_table': 'blocks',
                'ordering': ('page', 'order'),
            },
        ),
        migrations.CreateModel(
            name='BlockProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('key', models.CharField(max_length=100)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'block_properties',
            },
        ),
        migrations.CreateModel(
            name='BlockReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'db_table': 'block_references',
            },
        ),
        migrations.CreateModel(
            name='DailyNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'daily_notes',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='PageLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'db_table': 'page_links',
            },
        ),
        migrations.AlterModelOptions(
            name='journalentry',
            options={'ordering': ('-date',), 'verbose_name': 'journal entry', 'verbose_name_plural': 'journal entries'},
        ),
        migrations.RemoveField(
            model_name='page',
            name='content',
        ),
        migrations.RemoveField(
            model_name='page',
            name='is_published',
        ),
        migrations.AddField(
            model_name='page',
            name='date',
            field=models.DateField(blank=True, help_text='Date for daily notes', null=True),
        ),
        migrations.AddField(
            model_name='page',
            name='is_daily_note',
            field=models.BooleanField(default=False),
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['user', 'is_daily_note', 'date'], name='pages_user_id_38e19f_idx'),
        ),
        migrations.AlterModelTable(
            name='page',
            table='pages',
        ),
        migrations.AddField(
            model_name='block',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='journals.page'),
        ),
        migrations.AddField(
            model_name='block',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='journals.block'),
        ),
        migrations.AddField(
            model_name='block',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blockproperty',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='journals.block'),
        ),
        migrations.AddField(
            model_name='blockreference',
            name='source_block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_references', to='journals.block'),
        ),
        migrations.AddField(
            model_name='blockreference',
            name='target_block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_references', to='journals.block'),
        ),
        migrations.AddField(
            model_name='dailynote',
            name='page',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='daily_note', to='journals.page'),
        ),
        migrations.AddField(
            model_name='dailynote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pagelink',
            name='source_block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_links', to='journals.block'),
        ),
        migrations.AddField(
            model_name='pagelink',
            name='target_page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_links', to='journals.page'),
        ),
        migrations.AddIndex(
            model_name='block',
            index=models.Index(fields=['user', 'page'], name='blocks_user_id_e19ecb_idx'),
        ),
        migrations.AddIndex(
            model_name='block',
            index=models.Index(fields=['parent'], name='blocks_parent__699706_idx'),
        ),
        migrations.AddIndex(
            model_name='block',
            index=models.Index(fields=['page', 'order'], name='blocks_page_id_8f3c43_idx'),
        ),
        migrations.AddIndex(
            model_name='blockproperty',
            index=models.Index(fields=['key', 'value'], name='block_prope_key_a91c95_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blockproperty',
            unique_together={('block', 'key')},
        ),
        migrations.AddIndex(
            model_name='blockreference',
            index=models.Index(fields=['target_block'], name='block_refer_target__fc9a3c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blockreference',
            unique_together={('source_block', 'target_block')},
        ),
        migrations.AlterUniqueTogether(
            name='dailynote',
            unique_together={('user', 'date')},
        ),
        migrations.AddIndex(
            model_name='pagelink',
            index=models.Index(fields=['target_page'], name='page_links_target__920b74_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pagelink',
            unique_together={('source_block', 'target_page')},
        ),
    ]
